---
- name: Ensure base deploy directory exists
  ansible.builtin.file:
    path: "{{ base_deploy_path }}"
    state: directory
    mode: "0755"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
  when: common_upgrade | bool

- name: Upgrade apt packages
  ansible.builtin.apt:
    upgrade: dist
  when: common_upgrade | bool

- name: Install common packages
  ansible.builtin.apt:
    name: "{{ common_packages }}"
    state: present

- name: Ensure docker compose plugin is installed
  ansible.builtin.apt:
    name:
      - docker-compose-plugin
      - python3-docker
    state: present

- name: Ensure Python virtual environment root exists
  ansible.builtin.file:
    path: "{{ python_virtualenv_root }}"
    state: directory
    mode: "0755"

- name: Deploy community.docker requirements manifest
  ansible.builtin.template:
    src: community_docker_requirements.txt.j2
    dest: "{{ python_virtualenv_root }}/{{ community_docker_requirements_filename }}"
    mode: "0644"

- name: Install community.docker dependencies into virtualenv
  ansible.builtin.pip:
    requirements: "{{ python_virtualenv_root }}/{{ community_docker_requirements_filename }}"
    virtualenv: "{{ python_virtualenv_root }}/{{ community_docker_venv_name }}"
    virtualenv_command: python3 -m venv
    state: present
    extra_args: --upgrade

- name: Cache community.docker Python interpreter path
  ansible.builtin.set_fact:
    community_docker_python_interpreter: "{{ python_virtualenv_root }}/{{ community_docker_venv_name }}/bin/python"
    docker_python_interpreter: "{{ python_virtualenv_root }}/{{ community_docker_venv_name }}/bin/python"
  cacheable: true

