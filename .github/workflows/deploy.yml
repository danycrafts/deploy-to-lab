name: Manage Home Lab Services

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Operation to perform"
        required: true
        default: install
        type: choice
        options:
          - install
          - update
          - uninstall
      services:
        description: "Whitespace-separated list of services to manage (leave blank for all)"
        required: false
        default: ""
        type: string

concurrency:
  group: manage-home-lab-services
  cancel-in-progress: false

jobs:
  manage:
    name: ${{ inputs.action }} services
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      HOME_LAB_IP: ${{ secrets.HOME_LAB_IP }}
      HOME_LAB_USER: ${{ secrets.HOME_LAB_USER }}
      HOME_LAB_PASSWORD: ${{ secrets.HOME_LAB_PASSWORD }}
      ANSIBLE_BECOME_PASS: ${{ secrets.HOME_LAB_PASSWORD }}
      TARGET: ${{ format('{0}@{1}', secrets.HOME_LAB_USER, secrets.HOME_LAB_IP) }}
      SSH_PORT: '22'
      COMPOSE_COMMAND: docker compose
      SERVICES: ${{ inputs.services }}
      ACTION: ${{ inputs.action }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure required secrets are available
        env:
          SSH_PRIVATE_KEY_HOME_LAB: ${{ secrets.SSH_PRIVATE_KEY_HOME_LAB }}
        run: |
          set -euo pipefail

          missing=()

          if [ -z "${SSH_PRIVATE_KEY_HOME_LAB:-}" ]; then
            missing+=(SSH_PRIVATE_KEY_HOME_LAB)
          fi

          if [ -z "${HOME_LAB_IP:-}" ]; then
            missing+=(HOME_LAB_IP)
          fi

          if [ -z "${HOME_LAB_USER:-}" ]; then
            missing+=(HOME_LAB_USER)
          fi

          if [ -z "${HOME_LAB_PASSWORD:-}" ]; then
            missing+=(HOME_LAB_PASSWORD)
          fi

          if [ "${#missing[@]}" -gt 0 ]; then
            printf '::error::Missing required secrets: %s\n' "${missing[*]}" >&2
            exit 1
          fi

      - name: Prepare SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_HOME_LAB }}

      - name: Populate known hosts
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          host="${TARGET##*@}"
          if [ -z "$host" ]; then
            echo "::error::Unable to determine host from target '$TARGET'" >&2
            exit 1
          fi
          ssh-keyscan -p "$SSH_PORT" -H "$host" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Run management script
        run: |
          set -euo pipefail

          if [ -z "${TARGET:-}" ]; then
            echo "::error::Target is required" >&2
            exit 1
          fi

          case "$ACTION" in
            install)
              script="install.sh"
              ;;
            update)
              script="configure.sh"
              ;;
            uninstall)
              script="uninstall.sh"
              ;;
            *)
              echo "::error::Unsupported action: $ACTION" >&2
              exit 1
              ;;
          esac

          args=("./scripts/$script")

          if [ -n "${SSH_PORT:-}" ]; then
            args+=("--port" "$SSH_PORT")
          fi

          if [ -n "${COMPOSE_COMMAND:-}" ]; then
            args+=("--compose-cmd" "$COMPOSE_COMMAND")
          fi

          read -r -a service_array <<<"${SERVICES:-}"

          if [ "${#service_array[@]}" -gt 0 ]; then
            args+=("$TARGET" "${service_array[@]}")
          else
            args+=("$TARGET")
          fi

          echo "Running: ${args[*]}"
          "${args[@]}"
